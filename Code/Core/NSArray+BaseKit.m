//
//  BWKit+NSArray.m
//  BWKit
//
//  Created by Bruno Wernimont on 5/12/11.
//  Copyright (c) 2011 __MyCompanyName__. All rights reserved.
//

#import "NSArray+BaseKit.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////

@implementation NSArray (BaseKit)


////////////////////////////////////////////////////////////////////////////////////////////////////
- (id)firstObject {
    return (self.count > 0) ? [self objectAtIndex:0] : nil;
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (BOOL)isEmpty {
    return (self.count == 0) ? YES : NO;
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (BOOL)boolValueAtIndex:(NSInteger)index {
    return [[self objectAtIndex:index] boolValue];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (int)intValueAtIndex:(NSInteger)index {
    return [[self objectAtIndex:index] intValue];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (NSInteger)integerValueAtIndex:(NSInteger)index {
    return [[self objectAtIndex:index] integerValue];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (float)floatValueAtIndex:(NSInteger)index {
    return [[self objectAtIndex:index] floatValue];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (double)doubleValueAtIndex:(NSInteger)index {
    return [[self objectAtIndex:index] doubleValue];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (NSString *)stringValueAtIndex:(NSInteger)index {
    return [self objectAtIndex:index];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (NSNumber *)numberValueAtIndex:(NSInteger)index {
    return [self objectAtIndex:index];
}

@end
